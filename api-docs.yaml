openapi: 3.0.1
info:
  title: Operations App
  description: Operations app is a secure, multi-tenanted microservice platform
  license:
    name: MIT Licence
    url: https://github.com/openMF/ph-ee-operations-app/blob/master/LICENSE
servers:
- url: http://localhost:5000
  description: Generated server url
paths:
  /api/v1/user/{userId}/roles:
    get:
      tags:
      - Users API
      operationId: retrieveRoles
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
      - auth: []
    put:
      tags:
      - Users API
      operationId: userAssignment
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: action
        in: query
        required: true
        schema:
          type: string
          enum:
          - ASSIGN
          - REVOKE
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAssignments'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/user/{userId}:
    get:
      tags:
      - Users API
      operationId: retrieveOne
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUser'
      security:
      - auth: []
    put:
      tags:
      - Users API
      operationId: update
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
    delete:
      tags:
      - Users API
      operationId: delete
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/role/{roleId}/permissions:
    get:
      tags:
      - roles-api
      operationId: retrievePermissions
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
      security:
      - auth: []
    put:
      tags:
      - roles-api
      operationId: permissionAssignment
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: action
        in: query
        required: true
        schema:
          type: string
          enum:
          - ASSIGN
          - REVOKE
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityAssignments'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/role/{roleId}:
    get:
      tags:
      - roles-api
      operationId: retrieveOne_1
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
      security:
      - auth: []
    put:
      tags:
      - roles-api
      operationId: update_1
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
    delete:
      tags:
      - roles-api
      operationId: delete_1
      parameters:
      - name: roleId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/permission/{permissionId}:
    get:
      tags:
      - permissions-api
      operationId: retrieveOne_2
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Permission'
      security:
      - auth: []
    put:
      tags:
      - permissions-api
      operationId: update_2
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
    delete:
      tags:
      - permissions-api
      operationId: delete_2
      parameters:
      - name: permissionId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/errorcode/{id}:
    get:
      tags:
      - error-codes-crud-api
      operationId: getSpecificErrorCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
    put:
      tags:
      - error-codes-crud-api
      operationId: updateErrorCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorCode'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
    delete:
      tags:
      - error-codes-crud-api
      operationId: deleteErrorCode
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
  /api/v1/user:
    post:
      tags:
      - Users API
      operationId: create
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUser'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/transfer/{transactionId}/refund:
    post:
      tags:
      - operations-api
      operationId: refundTransfer
      parameters:
      - name: Platform-TenantId
        in: header
        required: true
        schema:
          type: string
      - name: transactionId
        in: path
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: string
      security:
      - auth: []
  /api/v1/transactionRequests:
    get:
      tags:
      - Operations Detailed API
      operationId: transactionRequests
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 20
      - name: payerPartyId
        in: query
        required: false
        schema:
          type: string
      - name: payeePartyId
        in: query
        required: false
        schema:
          type: string
      - name: payeeDfspId
        in: query
        required: false
        schema:
          type: string
      - name: payerDfspId
        in: query
        required: false
        schema:
          type: string
      - name: transactionId
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: number
      - name: currency
        in: query
        required: false
        schema:
          type: string
      - name: startFrom
        in: query
        required: false
        schema:
          type: string
      - name: startTo
        in: query
        required: false
        schema:
          type: string
      - name: direction
        in: query
        required: false
        schema:
          type: string
      - name: clientCorrelationId
        in: query
        required: false
        schema:
          type: string
      - name: sortedBy
        in: query
        required: false
        schema:
          type: string
      - name: sortedOrder
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTransactionRequest'
      security:
      - api: []
      - auth: []
    post:
      tags:
      - Operations Detailed API
      operationId: filterTransactionRequests
      parameters:
      - name: command
        in: query
        required: false
        schema:
          type: string
          default: export
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10000
      - name: sortedOrder
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: startFrom
        in: query
        required: false
        schema:
          type: string
      - name: startTo
        in: query
        required: false
        schema:
          type: string
      - name: state
        in: query
        required: false
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: array
                items:
                  type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
      security:
      - api: []
      - auth: []
  /api/v1/role:
    post:
      tags:
      - roles-api
      operationId: create_1
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/permission:
    post:
      tags:
      - permissions-api
      operationId: create_2
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Permission'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/imuexchange/preview:
    post:
      tags:
      - imu-conversion-api
      operationId: create_3
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IMUConversionData'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IMUConversionData'
      security:
      - auth: []
  /api/v1/imuexchange/master:
    post:
      tags:
      - imu-conversion-api
      operationId: create_4
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IMUConversionData'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
    delete:
      tags:
      - imu-conversion-api
      operationId: delete_3
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IMUConversionData'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/errorcode/:
    get:
      tags:
      - error-codes-crud-api
      operationId: getAllErrorCode
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorCode'
    post:
      tags:
      - error-codes-crud-api
      operationId: addErrorCode
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ErrorCode'
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorCode'
  /api/v1/beneficiary:
    post:
      tags:
      - beneficiary-api
      operationId: create_5
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Beneficiary'
        required: true
      responses:
        200:
          description: OK
      security:
      - auth: []
  /api/v1/variables:
    get:
      tags:
      - operations-api
      operationId: variables
      parameters:
      - name: businessKey
        in: query
        required: true
        schema:
          type: string
      - name: businessKeyType
        in: query
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Variable'
      security:
      - auth: []
  /api/v1/users:
    get:
      tags:
      - Users API
      operationId: retrieveAll
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AppUser'
      security:
      - auth: []
  /api/v1/transfers:
    get:
      tags:
      - Operations Detailed API
      operationId: transfers
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: payerPartyId
        in: query
        required: false
        schema:
          type: string
      - name: payerDfspId
        in: query
        required: false
        schema:
          type: string
      - name: payeePartyId
        in: query
        required: false
        schema:
          type: string
      - name: payeeDfspId
        in: query
        required: false
        schema:
          type: string
      - name: transactionId
        in: query
        required: false
        schema:
          type: string
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: amount
        in: query
        required: false
        schema:
          type: number
      - name: currency
        in: query
        required: false
        schema:
          type: string
      - name: startFrom
        in: query
        required: false
        schema:
          type: string
      - name: startTo
        in: query
        required: false
        schema:
          type: string
      - name: direction
        in: query
        required: false
        schema:
          type: string
      - name: sortedBy
        in: query
        required: false
        schema:
          type: string
      - name: partyId
        in: query
        required: false
        schema:
          type: string
      - name: partyIdType
        in: query
        required: false
        schema:
          type: string
      - name: clientCorrelationId
        in: query
        required: false
        schema:
          type: string
      - name: sortedOrder
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTransfer'
      security:
      - api: []
      - auth: []
  /api/v1/transfer/{workflowInstanceKey}:
    get:
      tags:
      - operations-api
      operationId: transferDetails
      parameters:
      - name: workflowInstanceKey
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransferDetail'
      security:
      - auth: []
  /api/v1/transactionRequest/{workflowInstanceKey}:
    get:
      tags:
      - operations-api
      operationId: transactionRequestDetails
      parameters:
      - name: workflowInstanceKey
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionRequestDetail'
      security:
      - auth: []
  /api/v1/tasks:
    get:
      tags:
      - operations-api
      operationId: tasks
      parameters:
      - name: businessKey
        in: query
        required: true
        schema:
          type: string
      - name: businessKeyType
        in: query
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/Task'
      security:
      - auth: []
  /api/v1/roles:
    get:
      tags:
      - roles-api
      operationId: retrieveAll_1
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
      security:
      - auth: []
  /api/v1/permissions:
    get:
      tags:
      - permissions-api
      operationId: retrieveAll_2
      parameters:
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Permission'
      security:
      - auth: []
  /api/v1/errorcode/filter:
    get:
      tags:
      - error-codes-crud-api
      operationId: getErrorCodeByFilter
      parameters:
      - name: by
        in: query
        required: true
        schema:
          type: string
      - name: value
        in: query
        required: true
        schema:
          type: object
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorCode'
  /api/v1/beneficiary/{custIdentifier}:
    get:
      tags:
      - beneficiary-api
      operationId: getAllForCustomer
      parameters:
      - name: custIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Beneficiary'
      security:
      - auth: []
  /api/v1/batch:
    get:
      tags:
      - batch-api
      operationId: batchDetails
      parameters:
      - name: batchId
        in: query
        required: false
        schema:
          type: string
      - name: requestId
        in: query
        required: false
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BatchDTO'
      security:
      - auth: []
  /api/v1/batches:
    get:
      tags:
      - batch-api
      operationId: getBatches
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: sortedBy
        in: query
        required: false
        schema:
          type: string
      - name: sortedOrder
        in: query
        required: false
        schema:
          type: string
          default: DESC
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBatch'
      security:
      - auth: []
  /api/v1/batch/transactions:
    get:
      tags:
      - batch-api
      operationId: batchTransactionDetails
      parameters:
      - name: batchId
        in: query
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
      security:
      - auth: []
  /api/v1/batch/detail:
    get:
      tags:
      - batch-api
      operationId: batchDetails_1
      parameters:
      - name: batchId
        in: query
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: false
        schema:
          type: string
          default: ALL
      - name: pageNo
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      - name: command
        in: query
        required: false
        schema:
          type: string
          default: json
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTransfer'
      security:
      - auth: []
  /api/v1/beneficiary/{custIdentifier}/{identifier}:
    delete:
      tags:
      - beneficiary-api
      operationId: delete_4
      parameters:
      - name: custIdentifier
        in: path
        required: true
        schema:
          type: string
      - name: identifier
        in: path
        required: true
        schema:
          type: string
      - name: Platform-TenantId
        in: header
        description: Tenant Id
        required: true
        schema:
          type: string
      responses:
        200:
          description: OK
      security:
      - auth: []
components:
  schemas:
    EntityAssignments:
      type: object
      properties:
        entityIds:
          type: array
          items:
            type: integer
            format: int64
    AppUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
        username:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        password:
          type: string
        accountNonExpired:
          type: boolean
        accountNonLocked:
          type: boolean
        credentialsNonExpired:
          type: boolean
        enabled:
          type: boolean
        firstTimeLoginRemaining:
          type: boolean
        deleted:
          type: boolean
        lastTimePasswordUpdated:
          type: string
          format: date-time
        passwordNeverExpires:
          type: boolean
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
        disabled:
          type: boolean
        appUsers:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/AppUser'
    Permission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        grouping:
          type: string
        code:
          type: string
        entityName:
          type: string
        actionName:
          type: string
        canMakerChecker:
          type: boolean
    ErrorCode:
      type: object
      properties:
        id:
          type: integer
          format: int64
        transactionType:
          type: string
        errorMessage:
          type: string
        errorCode:
          type: string
        recoverable:
          type: boolean
    IMUConversionData:
      type: object
      properties:
        lockKey:
          type: string
        from:
          type: string
        to:
          type: string
        failWhenExpired:
          type: boolean
        amount:
          type: number
        rate:
          type: number
        convertedAmount:
          type: number
        errorCode:
          type: string
        errorMessage:
          type: string
        expireBy:
          type: string
          format: date-time
    Beneficiary:
      type: object
      properties:
        id:
          type: integer
          format: int64
        custIdentifier:
          type: string
        identifier:
          type: string
        name:
          type: string
        nickName:
          type: string
        accountNo:
          type: string
        leId:
          type: string
        currencyCode:
          type: string
        countryCode:
          type: string
    TransactionRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workflowInstanceKey:
          type: string
        transactionId:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        state:
          type: string
          enum:
          - IN_PROGRESS
          - RECEIVED
          - ACCEPTED
          - REJECTED
          - FAILED
        payeeDfspId:
          type: string
        payeePartyId:
          type: string
        payeePartyIdType:
          type: string
        payeeFee:
          type: number
        payeeQuoteCode:
          type: string
        payerDfspId:
          type: string
        payerPartyId:
          type: string
        payerPartyIdType:
          type: string
        payerFee:
          type: number
        payerQuoteCode:
          type: string
        amount:
          type: number
        currency:
          type: string
        direction:
          type: string
        authType:
          type: string
        initiatorType:
          type: string
        scenario:
          type: string
        externalId:
          type: string
        clientCorrelationId:
          type: string
        variables:
          type: array
          writeOnly: true
          items:
            $ref: '#/components/schemas/Variable'
    Variable:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workflowKey:
          type: integer
          format: int64
        workflowInstanceKey:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
        name:
          type: string
        value:
          type: string
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
    PageTransfer:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Transfer'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    Transfer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workflowInstanceKey:
          type: integer
          format: int64
        transactionId:
          type: string
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
          - COMPLETED
          - FAILED
          - IN_PROGRESS
          - UNKNOWN
        statusDetail:
          type: string
        payeeDfspId:
          type: string
        payeePartyId:
          type: string
        payeePartyIdType:
          type: string
        payeeFee:
          type: number
        payeeFeeCurrency:
          type: string
        payeeQuoteCode:
          type: string
        payerDfspId:
          type: string
        payerPartyId:
          type: string
        payerPartyIdType:
          type: string
        payerFee:
          type: number
        payerFeeCurrency:
          type: string
        payerQuoteCode:
          type: string
        amount:
          type: number
        currency:
          type: string
        direction:
          type: string
        errorInformation:
          type: string
        batchId:
          type: string
        clientCorrelationId:
          type: string
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        workflowKey:
          type: integer
          format: int64
        workflowInstanceKey:
          type: integer
          format: int64
        timestamp:
          type: integer
          format: int64
        intent:
          type: string
        recordType:
          type: string
        type:
          type: string
        elementId:
          type: string
    TransferDetail:
      type: object
      properties:
        transfer:
          $ref: '#/components/schemas/Transfer'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
    PageTransactionRequest:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TransactionRequest'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        empty:
          type: boolean
    TransactionRequestDetail:
      type: object
      properties:
        transactionRequest:
          $ref: '#/components/schemas/TransactionRequest'
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Task'
        variables:
          type: array
          items:
            $ref: '#/components/schemas/Variable'
    BatchDTO:
      type: object
      properties:
        batch_id:
          type: string
        request_id:
          type: string
        total:
          type: integer
          format: int64
        ongoing:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        successful:
          type: integer
          format: int64
        totalAmount:
          type: number
        successfulAmount:
          type: number
        pendingAmount:
          type: number
        failedAmount:
          type: number
        file:
          type: string
        notes:
          type: string
        created_at:
          type: string
        status:
          type: string
        modes:
          type: string
        purpose:
          type: string
    Batch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        batchId:
          type: string
        subBatchId:
          type: string
        requestId:
          type: string
        requestFile:
          type: string
        totalTransactions:
          type: integer
          format: int64
        ongoing:
          type: integer
          format: int64
        failed:
          type: integer
          format: int64
        completed:
          type: integer
          format: int64
        totalAmount:
          type: integer
          format: int64
        ongoingAmount:
          type: integer
          format: int64
        failedAmount:
          type: integer
          format: int64
        completedAmount:
          type: integer
          format: int64
        result_file:
          type: string
        resultGeneratedAt:
          type: string
          format: date-time
        note:
          type: string
        workflowKey:
          type: integer
          format: int64
        workflowInstanceKey:
          type: integer
          format: int64
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        paymentMode:
          type: string
    PageBatch:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        first:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        last:
          type: boolean
        empty:
          type: boolean
  securitySchemes:
    auth:
      type: http
      description: |+
        Use this curl request to generate authToken


        curl --location --request POST 'ops-bk.sandbox.fynarfin.io/oauth/token?username=mifos&password=password&grant_type=password' --header 'Platform-TenantId: gorilla' --header 'Authorization: Basic Y2xpZW50Og==' --header 'Content-Type: text/plain' --data-raw '{}'

      name: 'Authorization: Bearer'
      in: header
      scheme: bearer
